image: python:3.4
services:
  - postgres:9.4
  - redis:2.8

stages:
  - test
  - release

variables:
  DJANGO_SETTINGS_MODULE: munch.settings.test
  TEST_PG_USER: postgres
  TEST_PG_HOST: postgres
  TEST_PG_PASS: ""
  TEST_PG_NAME: munch
  TEST_PG_PORT: "5432"
  TEST_REDIS_HOST: redis
  TEST_REDIS_PORT: "6379"
  DOCKER_DRIVER: overlay
  CONTAINER_RELEASE: $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME
  CONTAINER_LATEST: $CI_REGISTRY_IMAGE:latest
  PACKAGECLOUD_REPO: oasiswork/crunchmail/python/

before_script:
  # make sure we can clone our private repos
  - mkdir -p ~/.ssh
  - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  - ssh-add <(echo "$CI_DEPLOY_PRIVATE_KEY")
  # cache python packages for faster builds
  - export PYTHONUSERBASE=/cache
  - export PYTHONPATH=/cache/lib/python3.4/site-packages:$PYTHONPATH
  - export PATH=/cache/bin:$PATH
  - pip install -U setuptools
  - pip install --process-dependency-links -e .[tests]

lint:
  stage: test
  script:
    - flake8

unittest:
  stage: test
  script:
    - munch django test munch

packagecloud-release:
  stage: release
  before_script:
    - apt-get update
    - apt-get install -y ruby
    - gem install package_cloud
  script:
    - python setup.py sdist
    - package_cloud push $PACKAGECLOUD_REPO dist/$CI_PROJECT_NAME-*.tar.gz
  only:
    - tags

docker-build:
  stage: release
  image: docker:latest
  services:
    - docker:dind
  before_script: []
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker build --pull -t $CONTAINER_RELEASE -t $CONTAINER_LATEST .
    - docker push $CONTAINER_RELEASE
    - docker push $CONTAINER_LATEST
  only:
    - tags
